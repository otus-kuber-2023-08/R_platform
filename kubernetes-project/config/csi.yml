---
apiVersion: v1
kind: Secret
metadata:
  namespace: kube-system
  name: csi-s3-secret
stringData:
  accessKeyID: "555"
  secretAccessKey: "555"
  endpoint: "https://storage.yandexcloud.net"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: csi-s3
provisioner: ru.yandex.s3.csi
parameters:
  mounter: geesefs
  options: "--memory-limit=1000 --dir-mode=0777 --file-mode=0666"
  bucket: "s3-backet-otus-robert"
  csi.storage.k8s.io/provisioner-secret-name: csi-s3-secret
  csi.storage.k8s.io/provisioner-secret-namespace: kube-system
  csi.storage.k8s.io/controller-publish-secret-name: csi-s3-secret
  csi.storage.k8s.io/controller-publish-secret-namespace: kube-system
  csi.storage.k8s.io/node-stage-secret-name: csi-s3-secret
  csi.storage.k8s.io/node-stage-secret-namespace: kube-system
  csi.storage.k8s.io/node-publish-secret-name: csi-s3-secret
  csi.storage.k8s.io/node-publish-secret-namespace: kube-system
#
#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: pvc-dynamic
#spec:
#  accessModes:
#    - ReadWriteOnce
#  storageClassName: csi-s3
#  resources:
#    requests:
#      storage: 4Gi
#---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: pod
#spec:
#  containers:
#    - name: app
#      image: ubuntu
#      command: ["/bin/sh"]
#      args: ["-c", "while true; do echo $(date -u) >> /data/out.txt; sleep 5; done"]
#      volumeMounts:
#        - name: persistent-storage
#          mountPath: /data
#  volumes:
#    - name: persistent-storage
#      persistentVolumeClaim:
#        claimName: pvc-dynamic
