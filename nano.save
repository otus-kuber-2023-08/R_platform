apiVersion: v1 kind: Pod metadata: creationTimestamp: "2024-01-23T18:15:27Z" generateName: vault-server- labels: 
    app.kubernetes.io/component: server app.kubernetes.io/instance: vault app.kubernetes.io/managed-by: Helm app.kubernetes.io/name: vault 
    app.kubernetes.io/part-of: vault app.kubernetes.io/version: 1.15.4 apps.kubernetes.io/pod-index: "0" controller-revision-hash: 
    vault-server-7d7779f546 helm.sh/chart: vault-0.6.0 statefulset.kubernetes.io/pod-name: vault-server-0 vault-active: "false" 
    vault-initialized: "true" vault-perf-standby: "false" vault-sealed: "true" vault-version: 1.15.4
  name: vault-server-0 namespace: infra ownerReferences: - apiVersion: apps/v1 blockOwnerDeletion: true controller: true kind: StatefulSet 
    name: vault-server uid: 4680215c-71ea-4b95-b261-86f4323ecf49
  resourceVersion: "8482" uid: e0d8c319-79c3-436c-bbb5-8cbd24bda854 spec: affinity: podAntiAffinity: 
      preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm:
          labelSelector: matchLabels: app.kubernetes.io/component: server app.kubernetes.io/instance: vault app.kubernetes.io/name: vault 
          topologyKey: kubernetes.io/hostname
        weight: 1 automountServiceAccountToken: true containers: - args: - server - -config=/bitnami/vault/config/config.hcl env: - name: 
    HOST_IP
      valueFrom: fieldRef: apiVersion: v1 fieldPath: status.hostIP - name: POD_IP valueFrom: fieldRef: apiVersion: v1 fieldPath: 
          status.podIP
    - name: VAULT_K8S_POD_NAME valueFrom: fieldRef: apiVersion: v1 fieldPath: metadata.name - name: VAULT_K8S_NAMESPACE valueFrom: 
        fieldRef:
          apiVersion: v1 fieldPath: metadata.namespace - name: VAULT_ADDR value: http://127.0.0.1:8200 - name: VAULT_API_ADDR value: 
      http://$(POD_IP):8200
    - name: HOSTNAME valueFrom: fieldRef: apiVersion: v1 fieldPath: metadata.name - name: VAULT_CLUSTER_ADDR value: 
      https://$(HOSTNAME).vault-server-headless:8201
    - name: HOME value: /bitnami/vault/home image: docker.io/bitnami/vault:1.15.4-debian-11-r2 imagePullPolicy: IfNotPresent lifecycle: 
      preStop:
        exec: command: - /bin/sh - -ec - sleep 5 && kill -SIGTERM $(pidof vault) name: server ports: - containerPort: 8200 name: http 
      protocol: TCP
    - containerPort: 8201 name: https-internal protocol: TCP readinessProbe: exec: command: - vault - status - -tls-skip-verify 
      failureThreshold: 5 initialDelaySeconds: 5 periodSeconds: 10 successThreshold: 1 timeoutSeconds: 5
    resources: {} securityContext: allowPrivilegeEscalation: false capabilities: drop: - ALL privileged: false readOnlyRootFilesystem: true 
      runAsNonRoot: true runAsUser: 1001 seLinuxOptions: {} seccompProfile:
        type: RuntimeDefault terminationMessagePath: /dev/termination-log terminationMessagePolicy: File volumeMounts: - mountPath: 
    /bitnami/vault/data
      name: data - mountPath: /bitnami/vault/config name: config - mountPath: /bitnami/vault/home name: home - mountPath: 
    /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-kn6jk readOnly: true dnsPolicy: ClusterFirst enableServiceLinks: true hostname: vault-server-0 nodeName: k8s-2 
  preemptionPolicy: PreemptLowerPriority priority: 0 restartPolicy: Always schedulerName: default-scheduler securityContext:
    fsGroup: 1001 fsGroupChangePolicy: Always serviceAccount: vault-server serviceAccountName: vault-server subdomain: 
  vault-server-headless terminationGracePeriodSeconds: 30 tolerations: - effect: NoExecute
    key: node.kubernetes.io/not-ready operator: Exists tolerationSeconds: 300 - effect: NoExecute key: node.kubernetes.io/unreachable 
    operator: Exists tolerationSeconds: 300
  volumes: - name: data persistentVolumeClaim: claimName: data-vault-server-0 - configMap: defaultMode: 420 name: vault-server name: config 
  - emptyDir: {}
    name: home - name: kube-api-access-kn6jk projected: defaultMode: 420 sources: - serviceAccountToken: expirationSeconds: 3607 path: 
          token
      - configMap: items: - key: ca.crt path: ca.crt name: kube-root-ca.crt - downwardAPI: items: - fieldRef: apiVersion: v1 fieldPath: 
              metadata.namespace
            path: namespace status: conditions: - lastProbeTime: null lastTransitionTime: "2024-01-23T18:15:45Z" status: "True" type: 
    Initialized
  - lastProbeTime: null lastTransitionTime: "2024-01-23T18:15:45Z" message: 'containers with unready status: [server]' reason: 
    ContainersNotReady status: "False" type: Ready
  - lastProbeTime: null lastTransitionTime: "2024-01-23T18:15:45Z" message: 'containers with unready status: [server]' reason: 
    ContainersNotReady status: "False" type: ContainersReady
  - lastProbeTime: null lastTransitionTime: "2024-01-23T18:15:44Z" status: "True" type: PodScheduled containerStatuses: - containerID: 
  containerd://f14a219028c4c390d66d51739aed14d3698dd42a63b83f11f7400b42c904ecf2
    image: docker.io/bitnami/vault:1.15.4-debian-11-r2 imageID: 
    docker.io/bitnami/vault@sha256:fafc30f3ac68d0dfa5ff856aaec72b08514843271ee8eb1b3496c714b6e374be lastState: {} name: server ready: false 
    restartCount: 0 started: true state:
      running: startedAt: "2024-01-23T18:17:40Z" hostIP: 172.18.8.102 phase: Running podIP: 10.233.65.18 podIPs: - ip: 10.233.65.18 
  qosClass: BestEffort startTime: "2024-01-23T18:15:45Z"
